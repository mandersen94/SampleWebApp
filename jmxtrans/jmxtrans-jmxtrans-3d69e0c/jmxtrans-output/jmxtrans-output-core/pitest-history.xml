21
<classHistory><id hierarchicalHash="51d46ede"><classId hash="1279467507"><name><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></name></classId></id><coverageId>69c85ed0</coverageId></classHistory>
<classHistory><id hierarchicalHash="19a440cce"><classId hash="3602985181"><name><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></name></classId></id><coverageId>4eee0bd9</coverageId></classHistory>
<classHistory><id hierarchicalHash="a57f98b9"><classId hash="2683193806"><name><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="230dddec"><classId hash="19025645"><name><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="69c85ed0"><classId hash="1774739152"><name><name>com/googlecode/jmxtrans/model/output/GraphiteWriterTests</name></name></classId></id><coverageId>69c85ed0</coverageId></classHistory>
<classHistory><id hierarchicalHash="19d472460"><classId hash="3653519471"><name><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="13c5206bb"><classId hash="2618830134"><name><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a5cb2870"><classId hash="93409003"><name><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></name></classId></id><coverageId>69c85ed0</coverageId></classHistory>
<classHistory><id hierarchicalHash="4eee0bd9"><classId hash="1324223449"><name><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriterTests</name></name></classId></id><coverageId>4eee0bd9</coverageId></classHistory>
<classHistory><id hierarchicalHash="17d518abf"><classId hash="3709317434"><name><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></name></classId></id><coverageId>bc5a5a94</coverageId></classHistory>
<classHistory><id hierarchicalHash="77a2f79f"><classId hash="569085695"><name><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></name></classId></id><coverageId>30708f7a</coverageId></classHistory>
<classHistory><id hierarchicalHash="31c273e7"><classId hash="834827239"><name><name>com/googlecode/jmxtrans/model/output/LibratoWriterTest</name></name></classId></id><coverageId>31c273e7</coverageId></classHistory>
<classHistory><id hierarchicalHash="10eb22390"><classId hash="1853377035"><name><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="30708f7a"><classId hash="812683130"><name><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriterTests</name></name></classId></id><coverageId>30708f7a</coverageId></classHistory>
<classHistory><id hierarchicalHash="1193a4491"><classId hash="3280133105"><name><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></name></classId></id><coverageId>4eee0bd9</coverageId></classHistory>
<classHistory><id hierarchicalHash="3f05ed95"><classId hash="1057353109"><name><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriterTests</name></name></classId></id><coverageId>3f05ed95</coverageId></classHistory>
<classHistory><id hierarchicalHash="5e30de70"><classId hash="1011175281"><name><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></name></classId></id><coverageId>30708f7a</coverageId></classHistory>
<classHistory><id hierarchicalHash="119ff2ecb"><classId hash="2042975558"><name><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f5f14225"><classId hash="1438083232"><name><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></name></classId></id><coverageId>be6488e8</coverageId></classHistory>
<classHistory><id hierarchicalHash="13e84d9c8"><classId hash="2655715395"><name><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></name></classId></id><coverageId>31c273e7</coverageId></classHistory>
<classHistory><id hierarchicalHash="bc5a5a94"><classId hash="3160038036"><name><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriterTest</name></name></classId></id><coverageId>bc5a5a94</coverageId></classHistory>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>159</int><int>195</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>173</int><int>209</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>219</int><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GraphiteWriter;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GraphiteWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GraphiteWriter;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setHost</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>175</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>179</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>185</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>189</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>192</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>195</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>197</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>sanitizeString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>sanitizeString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>sanitizeString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>getAddHostnameTagDefault</name></method><methodDesc>()Z</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>getAddHostnameTagDefault</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>shutdownSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>shutdownSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>startOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>startOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setHost</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>getAddHostnameTagDefault</name></method><methodDesc>()Z</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>getAddHostnameTagDefault</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setHost</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>185</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>231</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>171</int><int>228</int><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>189</int><int>246</int><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>119</int><int>184</int><int>241</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>175</int><int>232</int><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>171</int><int>228</int><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>189</int><int>246</int><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>171</int><int>228</int><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>189</int><int>246</int><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>237</int><int>115</int><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>250</int><int>128</int><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>255</int><int>198</int><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getApiKey</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getDetectInstance</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>267</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>312</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>313</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>297</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>185</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>192</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>206</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>210</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>237</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>241</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>243</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>277</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>284</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>285</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>286</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>287</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>296</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>311</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>351</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>297</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>297</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>352</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>357</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>271</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>278</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>288</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>304</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>314</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>318</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>331</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>335</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>339</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>343</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getProxyHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getProxyPort</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getSource</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getTimeoutInMillis</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getBucketType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getHostname</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getHostname</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getLibratoApiTimeoutInMillis</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getProxyHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getProxyPort</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/net/URL;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getUsername</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>204</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>258</int><int>171</int><int>317</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>293</int><int>234</int><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>157</int><int>244</int><int>303</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>238</int><int>297</int><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>253</int><int>312</int><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>322</int><int>263</int><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>258</int><int>171</int><int>317</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>293</int><int>234</int><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>258</int><int>171</int><int>317</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>293</int><int>234</int><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>308</int><int>249</int><int>162</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>327</int><int>268</int><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>getHandler</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>64</int><int>92</int><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>64</int><int>92</int><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>64</int><int>92</int><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>68</int><int>96</int><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/slf4j/Logger;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/slf4j/Logger;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/slf4j/Logger;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/slf4j/Logger;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/slf4j/Logger;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>computeAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Slf4JOutputWriter</name></clazz><method><name>logValue</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)V</methodDesc></location><indexes><int>103</int><int>130</int><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/util/Map;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/util/Map;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setAddHostnameTag</name></method><methodDesc>(Ljava/lang/Boolean;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setMergeTypeNamesTags</name></method><methodDesc>(Ljava/lang/Boolean;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setMetricNamingExpression</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setTagName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/util/Map;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/util/Map;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setAddHostnameTag</name></method><methodDesc>(Ljava/lang/Boolean;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setMergeTypeNamesTags</name></method><methodDesc>(Ljava/lang/Boolean;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setMetricNamingExpression</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setTagName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setRootPrefix</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
