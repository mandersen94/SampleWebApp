13
<classHistory><id hierarchicalHash="dfc47f1d"><classId hash="3754196765"><name><name>com/googlecode/jmxtrans/classloader/ClassLoadingTests</name></name></classId></id><coverageId>dfc47f1d</coverageId></classHistory>
<classHistory><id hierarchicalHash="415b208b"><classId hash="1096491147"><name><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="bce31579"><classId hash="3168998777"><name><name>com/googlecode/jmxtrans/util/NumberUtils</name></name></classId></id><coverageId>4c7a0074</coverageId></classHistory>
<classHistory><id hierarchicalHash="d6df450e"><classId hash="3604956430"><name><name>com/googlecode/jmxtrans/util/WatchedCallback</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="7af9b570"><classId hash="2063185264"><name><name>com/googlecode/jmxtrans/util/WatchDir</name></name></classId></id><coverageId>c0cb97ea</coverageId></classHistory>
<classHistory><id hierarchicalHash="95d868c2"><classId hash="2513987778"><name><name>com/googlecode/jmxtrans/util/ObjectToDoubleTest</name></name></classId></id><coverageId>95d868c2</coverageId></classHistory>
<classHistory><id hierarchicalHash="4c7a0074"><classId hash="1283063924"><name><name>com/googlecode/jmxtrans/util/NumberUtilsTest</name></name></classId></id><coverageId>4c7a0074</coverageId></classHistory>
<classHistory><id hierarchicalHash="35853b48"><classId hash="897923912"><name><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></name></classId></id><coverageId>95d868c2</coverageId></classHistory>
<classHistory><id hierarchicalHash="805249d0"><classId hash="2152876496"><name><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></name></classId></id><coverageId>dfc47f1d</coverageId></classHistory>
<classHistory><id hierarchicalHash="2ed38a38"><classId hash="785615416"><name><name>com/googlecode/jmxtrans/classloader/JarLoadingException</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="c0cb97ea"><classId hash="3234568170"><name><name>com/googlecode/jmxtrans/util/WatchDirTest</name></name></classId></id><coverageId>c0cb97ea</coverageId></classHistory>
<classHistory><id hierarchicalHash="112390636"><classId hash="3504203179"><name><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8c3b82c3"><classId hash="1256219192"><name><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></name></classId></id><coverageId>0</coverageId></classHistory>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(com.googlecode.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(com.googlecode.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(com.googlecode.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(com.googlecode.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(com.googlecode.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(com.googlecode.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(com.googlecode.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.util.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.ObjectToDoubleTest.stringIsNotConverted(com.googlecode.jmxtrans.util.ObjectToDoubleTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.ObjectToDoubleTest.stringIsNotConverted(com.googlecode.jmxtrans.util.ObjectToDoubleTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.ObjectToDoubleTest.stringIsNotConverted(com.googlecode.jmxtrans.util.ObjectToDoubleTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.ObjectToDoubleTest.integerIsConvertedToDouble(com.googlecode.jmxtrans.util.ObjectToDoubleTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.ObjectToDoubleTest.integerIsConvertedToDouble(com.googlecode.jmxtrans.util.ObjectToDoubleTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.ObjectToDoubleTest.integerIsConvertedToDouble(com.googlecode.jmxtrans.util.ObjectToDoubleTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.ObjectToDoubleTest.integerIsConvertedToDouble(com.googlecode.jmxtrans.util.ObjectToDoubleTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.ObjectToDoubleTest.stringIsNotConverted(com.googlecode.jmxtrans.util.ObjectToDoubleTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.ObjectToDoubleTest.integerIsConvertedToDouble(com.googlecode.jmxtrans.util.ObjectToDoubleTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.ObjectToDoubleTest.integerIsConvertedToDouble(com.googlecode.jmxtrans.util.ObjectToDoubleTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.ObjectToDoubleTest.stringIsNotConverted(com.googlecode.jmxtrans.util.ObjectToDoubleTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.ObjectToDoubleTest.doubleReturnedAsItself(com.googlecode.jmxtrans.util.ObjectToDoubleTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/ObjectToDouble</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.ObjectToDoubleTest.integerIsConvertedToDouble(com.googlecode.jmxtrans.util.ObjectToDoubleTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.modifiedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.modifiedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.modifiedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>stopService</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Lcom/googlecode/jmxtrans/util/SignalInterceptor;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Lcom/googlecode/jmxtrans/util/SignalInterceptor;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></clazz><method><name>register</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></clazz><method><name>register</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
