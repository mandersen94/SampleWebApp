4
<classHistory><id hierarchicalHash="3f67b028"><classId hash="1063759912"><name><name>com/googlecode/jmxtrans/model/output/GangliaWriterTests</name></name></classId></id><coverageId>3f67b028</coverageId></classHistory>
<classHistory><id hierarchicalHash="11b6e9eba"><classId hash="1305495624"><name><name>com/googlecode/jmxtrans/model/output/GangliaWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="16dd82ff7"><classId hash="3449706098"><name><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></name></classId></id><coverageId>3f67b028</coverageId></classHistory>
<classHistory><id hierarchicalHash="128fb3d81"><classId hash="1532815119"><name><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></name></classId></id><coverageId>3f67b028</coverageId></classHistory>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationWithoutSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>162</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getAddressingMode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getAddressingMode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getDmax</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getGroupName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSlope</name></method><methodDesc>()Linfo/ganglia/gmetric4j/gmetric/GMetricSlope;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getTmax</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getTtl</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getUnits</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>isV31</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GangliaWriter;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationWithoutSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GangliaWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GangliaWriter;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setAddressingMode</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setDmax</name></method><methodDesc>(Ljava/lang/Integer;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setGroupName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setHost</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setSlope</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setTmax</name></method><methodDesc>(Ljava/lang/Integer;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setTtl</name></method><methodDesc>(Ljava/lang/Integer;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setUnits</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setV31</name></method><methodDesc>(Ljava/lang/Boolean;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
